<?php

namespace App\Http\Controllers\Admin;

use App\Model\Account;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Facades\Session;

class AccountController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        //接收数据
        $account_number = $request->get('account_number');
        $account_grade = $request->get('account_grade');
        $account_time = $request->get('account_time');
        if (!empty($account_number) or !empty($account_grade) or !empty($account_time)) {
//            Cache::flush();
            Cache::forget('ResultAccountselect'.Session::get('user')['user_id']); //获取
        }
        //查询数据
        if ( !Cache::has('ResultAccountselect'.Session::get('user')['user_id']) ) {
            $account = Account::orderBy('account_id', 'asc');
            if (!empty($account_number)) {
                $account->where('account_number', 'like', "%$account_number%");
            }
            if (!empty($account_grade)) {
                $account->where('account_grade', 'like', "%$account_grade%");
            }
            if (!empty($account_time)) {
                $account->where('account_time', 'like', "%$account_time%");
            }
            $content = $account->paginate(15);
            Cache::forever('ResultAccountselect'.Session::get('user')['user_id'], $content);
        }
        $content = Cache::get('ResultAccountselect'.Session::get('user')['user_id']); //获取
        //赋值模板
        return view('Admin/CountManage/Account')->with('content',$content);
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //查询数据
        if ( !Cache::has('ResultAccount'.Session::get('user')['user_id']) ) {
            $content = Account::Accountselect($id);
            Cache::forever('ResultAccount'.Session::get('user')['user_id'], $content);
        }
        $content = Cache::get('ResultAccount'.Session::get('user')['user_id']); //获取
        //赋值模板
        return view('Admin/CountManage/Accountedit')->with('content',$content);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
        $data = $this->data();
        $value= Account::updataccount($data,$id);
        Cache::flush();
        if($value['error']){
            $request->session()->flash('msg',$value['msg']);
            return redirect()->route('Account.index');
        }else{
            $request->session()->flash('msg',$value['msg']);
            return redirect()->route('Account.index');
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
        $data = $this->data();
        //执行软删除
        if($id != 'all'){
            $value = Account::where('account_id',$id)->delete();
        }else{
            $value = Account::whereIn('account_id',$data['id'])->delete();
        }
        //删除关系表
        Cache::flush();
        if($value){
            return ['msg'=>'删除用户成功','error'=>true];
        }else{
            return ['msg'=>'删除用户失败','error'=>false];
        }
    }
}
